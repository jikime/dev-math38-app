"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { ScrollArea } from "@/components/ui/scroll-area"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Dialog, DialogContent, DialogTitle } from "@/components/ui/dialog"
import { ChevronRight, RotateCcw, Edit3, X } from "lucide-react"

interface Problem {
  id: string
  title: string
}

interface ManualProblemDialogProps {
  open: boolean
  onOpenChange: (open: boolean) => void
  selectedProblems: Problem[]
  onProblemsChange: (problems: Problem[]) => void
}

export function ManualProblemDialog({
  open,
  onOpenChange,
  selectedProblems,
  onProblemsChange,
}: ManualProblemDialogProps) {
  const [filterCategory, setFilterCategory] = useState("전체 선택")
  const [currentPage, setCurrentPage] = useState(1)
  const [showPageMapPreview, setShowPageMapPreview] = useState(false)

  const addProblemToPreview = (problem: Problem) => {
    const isAlreadyAdded = selectedProblems.some((p) => p.id === problem.id)
    if (!isAlreadyAdded) {
      onProblemsChange([...selectedProblems, problem])
    }
  }

  const handleManualSubmit = () => {
    console.log("수동 출제 완료:", selectedProblems)
    onOpenChange(false)
  }

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent>
        <DialogTitle>수동 출제</DialogTitle>
        <div className="flex h-full">
          {/* Left Sidebar */}
          <div className="w-80 bg-gray-50 border-r border-gray-200 flex flex-col">
            <div className="p-4 border-b border-gray-200 flex-shrink-0">
              <h3 className="font-semibold text-lg mb-2">항목을 선택해 주세요</h3>
            </div>

            <ScrollArea className="flex-1">
              <div className="p-4 space-y-4">
                {/* 1.1.1 소수와 합성수 */}
                <div>
                  <div className="flex items-center justify-between mb-2">
                    <h4 className="font-medium text-sm">1.1.1 소수와 합성수</h4>
                    <span className="text-xs text-gray-500">전체 선택</span>
                  </div>
                  <div className="space-y-1">
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span className="text-blue-600">A01. 물과 나머지 ✓</span>
                      <span className="text-gray-500">65</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span className="text-blue-600">A02. 소수의 합성수 ✓</span>
                      <span className="text-gray-500">131</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span className="text-blue-600">A03. 소수의 성질 ✓</span>
                      <span className="text-gray-500">105</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A04. 기둥제곱</span>
                      <span className="text-gray-500">175</span>
                    </div>
                  </div>
                </div>

                {/* 1.1.2 소인수분해 */}
                <div>
                  <div className="flex items-center justify-between mb-2">
                    <h4 className="font-medium text-sm">1.1.2 소인수분해</h4>
                    <span className="text-xs text-gray-500">전체 선택</span>
                  </div>
                  <div className="space-y-1">
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A05. 소인수분해하기</span>
                      <span className="text-gray-500">140</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A06. 소인수 구하기</span>
                      <span className="text-gray-500">135</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A07. 소인수분해의 결과에서 지수구하기</span>
                      <span className="text-gray-500">63</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A08. 약수 구하기</span>
                      <span className="text-gray-500">138</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A09. 약수의 개수 구하기</span>
                      <span className="text-gray-500">142</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A10. 약수의 개수가 주어질 때 지수 구하기</span>
                      <span className="text-gray-500">42</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A11. 약수의 개수가 주어질 때 미지수 구하기</span>
                      <span className="text-gray-500">41</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A12. 약수의 개수가 가장 작은값 구하기</span>
                      <span className="text-gray-500">48</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A13. 제곱인 수 만들기</span>
                      <span className="text-gray-500">164</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A14. 기둥제곱한 수의 일의 자리 소수</span>
                      <span className="text-gray-500">22</span>
                    </div>
                  </div>
                </div>

                {/* 1.1.3 최대공약수와 최소공배수 */}
                <div>
                  <div className="flex items-center justify-between mb-2">
                    <h4 className="font-medium text-sm">1.1.3 최대공약수와 최소공배수</h4>
                    <span className="text-xs text-gray-500">전체 선택</span>
                  </div>
                  <div className="space-y-1">
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A15. 최대공약수 구하기</span>
                      <span className="text-gray-500">120</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A16. 최소공배수 구하기</span>
                      <span className="text-gray-500">115</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A17. 최대공약수와 최소공배수의 관계</span>
                      <span className="text-gray-500">89</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>A18. 서로소인 수 찾기</span>
                      <span className="text-gray-500">76</span>
                    </div>
                  </div>
                </div>

                {/* 3.1.1 문자를 사용한 식 */}
                <div>
                  <div className="flex items-center justify-between mb-2">
                    <h4 className="font-medium text-sm">3.1.1 문자를 사용한 식</h4>
                    <span className="text-xs text-gray-500">전체 선택</span>
                  </div>
                  <div className="space-y-1">
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C01. 곱셈의 나눗셈 기호의 생략</span>
                      <span className="text-gray-500">271</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C02. 곱셈의 나눗셈 기호를 사용하여 나타내기</span>
                      <span className="text-gray-500">42</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C03. 문자를 사용한 식: 가격, 할인</span>
                      <span className="text-gray-500">109</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C04. 문자를 사용한 식: 속력</span>
                      <span className="text-gray-500">50</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C05. 문자를 사용한 식: 농도</span>
                      <span className="text-gray-500">35</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C06. 문자를 사용한 식: 지연수, 단위, 평균</span>
                      <span className="text-gray-500">69</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C07. 문자를 사용한 식: 도형</span>
                      <span className="text-gray-500">108</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C08. 문자를 사용한 식: 종합</span>
                      <span className="text-gray-500">110</span>
                    </div>
                  </div>
                </div>

                {/* 3.1.2 식의 값 */}
                <div>
                  <div className="flex items-center justify-between mb-2">
                    <h4 className="font-medium text-sm">3.1.2 식의 값</h4>
                    <span className="text-xs text-gray-500">전체 선택</span>
                  </div>
                  <div className="space-y-1">
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C09. 식의 값 구하기</span>
                      <span className="text-gray-500">95</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C10. 문자의 값이 주어질 때 식의 값</span>
                      <span className="text-gray-500">87</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C11. 식의 값이 주어질 때 문자의 값</span>
                      <span className="text-gray-500">73</span>
                    </div>
                  </div>
                </div>

                {/* 3.2.1 일차방정식의 풀이 */}
                <div>
                  <div className="flex items-center justify-between mb-2">
                    <h4 className="font-medium text-sm">3.2.1 일차방정식의 풀이</h4>
                    <span className="text-xs text-gray-500">전체 선택</span>
                  </div>
                  <div className="space-y-1">
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C12. 일차방정식의 해</span>
                      <span className="text-gray-500">156</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C13. 일차방정식 풀이</span>
                      <span className="text-gray-500">142</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C14. 계수가 분수인 일차방정식</span>
                      <span className="text-gray-500">98</span>
                    </div>
                    <div className="flex items-center justify-between p-2 hover:bg-gray-100 rounded text-sm">
                      <span>C15. 계수가 소수인 일차방정식</span>
                      <span className="text-gray-500">67</span>
                    </div>
                  </div>
                </div>
              </div>
            </ScrollArea>
          </div>

          {/* Center Content */}
          <div className="flex-1 flex flex-col">
            {/* Header */}
            <div className="p-4 border-b border-gray-200 bg-white">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-4">
                  <span className="text-sm font-medium">필터선택</span>
                  <Select value={filterCategory} onValueChange={setFilterCategory}>
                    <SelectTrigger className="w-32">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="전체 선택">필터</SelectItem>
                      <SelectItem value="소수와 합성수">소수와 합성수</SelectItem>
                      <SelectItem value="소인수분해">소인수분해</SelectItem>
                      <SelectItem value="문자를 사용한 식">문자를 사용한 식</SelectItem>
                    </SelectContent>
                  </Select>
                  <span className="text-sm text-gray-600">(291 / 291)</span>
                </div>
                <div className="flex items-center gap-2">
                  <Button variant="ghost" size="sm">
                    <RotateCcw className="w-4 h-4" />
                  </Button>
                  <Button
                    variant={showPageMapPreview ? "default" : "outline"}
                    size="sm"
                    onClick={() => setShowPageMapPreview(!showPageMapPreview)}
                  >
                    페이지 맵
                  </Button>
                  <Button
                    className="bg-blue-600 hover:bg-blue-700"
                    onClick={handleManualSubmit}
                    disabled={selectedProblems.length === 0}
                  >
                    <Edit3 className="w-4 h-4 mr-2" />
                    수동 출제 ({selectedProblems.length})
                  </Button>
                </div>
              </div>
            </div>

            {/* Problem Grid */}
            <div className="flex-1 p-6 overflow-y-auto">
              <div className="mb-4 flex items-center justify-between">
                <div className="flex items-center gap-2">
                  <Button
                    variant={currentPage === 1 ? "default" : "outline"}
                    size="sm"
                    onClick={() => setCurrentPage(1)}
                    className="w-8 h-8 p-0"
                  >
                    1
                  </Button>
                  <Button
                    variant={currentPage === 2 ? "default" : "outline"}
                    size="sm"
                    onClick={() => setCurrentPage(2)}
                    className="w-8 h-8 p-0"
                  >
                    2
                  </Button>
                  <Button
                    variant={currentPage === 3 ? "default" : "outline"}
                    size="sm"
                    onClick={() => setCurrentPage(3)}
                    className="w-8 h-8 p-0"
                  >
                    3
                  </Button>
                  <Button variant="ghost" size="sm">
                    <ChevronRight className="w-4 h-4" />
                  </Button>
                </div>
              </div>

              <div className="grid grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                {/* Problem Card 1 */}
                {(() => {
                  const isAlreadyAdded = selectedProblems.some((p) => p.id === "A01")
                  return (
                    <div className="bg-card text-card-foreground flex flex-col h-80 rounded-xl border  border-gray-200">
                      <div className="p-6 flex-1 flex flex-col">
                        <div className="flex items-center justify-between mb-3">
                          <div className="flex items-center gap-2">
                            <span className="font-bold text-lg">A01. 물과 나머지</span>
                          </div>
                          <div className="flex items-center gap-1">
                            <Badge className="bg-blue-100 text-blue-800 text-xs">하</Badge>{" "}
                            <Badge className="bg-blue-100 text-blue-800 text-xs">하</Badge>
                            <Badge className="bg-gray-100 text-gray-800 text-xs">이해</Badge>
                          </div>
                        </div>
                        <div className="flex-1 mb-4">
                          <p className="text-sm text-gray-700 leading-relaxed">
                            100 이하의 자연수 중 15의 배수는 모두 몇 개인지 구하시오.
                          </p>
                        </div>
                        <div className="flex items-center gap-2 justify-center">
                          <Button size="sm" variant="outline" className="text-xs bg-transparent flex-1">
                            Challenge
                          </Button>
                          <Button size="sm" variant="outline" className="text-xs bg-transparent flex-1">
                            해답지
                          </Button>
                        </div>
                        <div
                          className={`mt-auto p-2 rounded text-center text-sm cursor-pointer ${
                            isAlreadyAdded
                              ? "bg-green-100 text-green-800 font-medium"
                              : "bg-gray-50 text-gray-600 hover:bg-gray-100"
                          }`}
                          onClick={() => !isAlreadyAdded && addProblemToPreview({ id: "A01", title: "물과 나머지" })}
                        >
                          {isAlreadyAdded ? "추가됨 ✓" : "문제 추가"}
                        </div>
                      </div>
                    </div>
                  )
                })()}

                {/* Problem Card 2 */}
                {(() => {
                  const isAlreadyAdded = selectedProblems.some((p) => p.id === "A02")
                  return (
                    <div className="bg-card text-card-foreground flex flex-col h-80 rounded-xl border  border-gray-200">
                      <div className="p-6 flex-1 flex flex-col">
                        <div className="flex items-center justify-between mb-3">
                          <div className="flex items-center gap-2">
                            <span className="font-bold text-lg">A02. 소수의 합성수</span>
                          </div>
                          <div className="flex items-center gap-1">
                            <Badge className="bg-blue-100 text-blue-800 text-xs">하</Badge>
                            <Badge className="bg-gray-100 text-gray-800 text-xs">이해</Badge>
                          </div>
                        </div>
                        <div className="flex-1 mb-4">
                          <p className="text-sm text-gray-700 leading-relaxed">
                            40 미만의 자연수 중 8의 배수이면서 6의 배수가 아닌 것의 개수를 구하시오.
                          </p>
                        </div>
                        <div className="flex items-center gap-2 justify-center">
                          <Button size="sm" variant="outline" className="text-xs bg-transparent flex-1">
                            Challenge
                          </Button>
                          <Button size="sm" variant="outline" className="text-xs bg-transparent flex-1">
                            해답지
                          </Button>
                        </div>
                        <div
                          className={`mt-auto p-2 rounded text-center text-sm cursor-pointer ${
                            isAlreadyAdded
                              ? "bg-green-100 text-green-800 font-medium"
                              : "bg-gray-50 text-gray-600 hover:bg-gray-100"
                          }`}
                          onClick={() =>
                            !isAlreadyAdded && addProblemToPreview({ id: "A02", title: "소수의 합성수" })
                          }
                        >
                          {isAlreadyAdded ? "추가됨 ✓" : "문제 추가"}
                        </div>
                      </div>
                    </div>
                  )
                })()}

                {/* Problem Card 3 */}
                {(() => {
                  const isAlreadyAdded = selectedProblems.some((p) => p.id === "A03")
                  return (
                    <div className="bg-card text-card-foreground flex flex-col h-80 rounded-xl border  border-gray-200">
                      <div className="p-6 flex-1 flex flex-col">
                        <div className="flex items-center justify-between mb-3">
                          <div className="flex items-center gap-2">
                            <span className="font-bold text-lg">A03. 소수의 성질</span>
                          </div>
                          <div className="flex items-center gap-1">
                            <Badge className="bg-green-100 text-green-800 text-xs">중</Badge>
                            <Badge className="bg-gray-100 text-gray-800 text-xs">이해</Badge>
                          </div>
                        </div>
                        <div className="flex-1 mb-4">
                          <p className="text-sm text-gray-700 leading-relaxed">
                            자연수 A를 5로 나누었더니 몫이 8이고, 나머지가 3이었다. A를 7로 나눈 나머지를 구하시오.
                          </p>
                        </div>
                        <div className="flex items-center gap-2 justify-center">
                          <Button size="sm" variant="outline" className="text-xs bg-transparent flex-1">
                            Challenge
                          </Button>
                          <Button size="sm" variant="outline" className="text-xs bg-transparent flex-1">
                            해답지
                          </Button>
                        </div>
                        <div
                          className={`mt-auto p-2 rounded text-center text-sm cursor-pointer ${
                            isAlreadyAdded
                              ? "bg-green-100 text-green-800 font-medium"
                              : "bg-gray-50 text-gray-600 hover:bg-gray-100"
                          }`}
                          onClick={() => !isAlreadyAdded && addProblemToPreview({ id: "A03", title: "소수의 성질" })}
                        >
                          {isAlreadyAdded ? "추가됨 ✓" : "문제 추가"}
                        </div>
                      </div>
                    </div>
                  )
                })()}

                {/* Problem Card 4 */}
                {(() => {
                  const isAlreadyAdded = selectedProblems.some((p) => p.id === "A04")
                  return (
                    <div className="bg-card text-card-foreground flex flex-col h-80 rounded-xl border  border-gray-200">
                      <div className="p-6 flex-1 flex flex-col">
                        <div className="flex items-center justify-between mb-3">
                          <div className="flex items-center gap-2">
                            <span className="font-bold text-lg">A04. 기둥제곱</span>
                          </div>
                          <div className="flex items-center gap-1">
                            <Badge className="bg-green-100 text-green-800 text-xs">중</Badge>
                            <Badge className="bg-gray-100 text-gray-800 text-xs">이해</Badge>
                          </div>
                        </div>
                        <div className="flex-1 mb-4">
                          <p className="text-sm text-gray-700 leading-relaxed">
                            56을 어떤 자연수로 나누면 몫이 아이어지면서 6의 배수가 아닌 것의 개수를 구하시오.
                          </p>
                        </div>
                        <div className="flex items-center justify-between">
                          <Button size="sm" variant="outline" className="text-xs bg-transparent">
                            해답지
                          </Button>
                          <Button size="sm" variant="outline" className="text-xs bg-transparent">
                            Challenge
                          </Button>
                        </div>
                        <div
                          className={`mt-auto p-2 rounded text-center text-sm cursor-pointer ${
                            isAlreadyAdded
                              ? "bg-green-100 text-green-800 font-medium"
                              : "bg-gray-50 text-gray-600 hover:bg-gray-100"
                          }`}
                          onClick={() => !isAlreadyAdded && addProblemToPreview({ id: "A04", title: "기둥제곱" })}
                        >
                          {isAlreadyAdded ? "추가됨 ✓" : "문제 추가"}
                        </div>
                      </div>
                    </div>
                  )
                })()}
              </div>
            </div>
          </div>

          {/* Right Sidebar - Page Map Preview */}
          {showPageMapPreview && (
            <div className="w-64 bg-gray-50 border-l border-gray-200 flex flex-col">
              <div className="p-4 border-b border-gray-200">
                <div className="flex items-center justify-between">
                  <h3 className="font-semibold text-lg">페이지 맵</h3>
                  <Button
                    variant="ghost"
                    size="sm"
                    className="h-8 w-8 p-0"
                    onClick={() => setShowPageMapPreview(false)}
                  >
                    <X className="h-4 w-4" />
                  </Button>
                </div>
              </div>
              <div className="flex-1 p-4">
                <div className="border-2 border-gray-300 rounded-lg p-2 mb-2">
                  <div className="text-sm font-medium mb-2">1</div>
                  <div className="border border-gray-300 rounded-lg p-2 relative">
                    <div className="grid grid-cols-2 gap-2">
                      <div className="flex flex-col gap-2">
                        {selectedProblems
                          .slice(0, Math.ceil(selectedProblems.length / 2))
                          .map((problem, index) => (
                            <div key={index} className="text-center text-sm font-medium">
                              {index + 1}
                            </div>
                          ))}
                        {selectedProblems.length === 0 && (
                          <div className="text-center text-sm font-medium">1</div>
                        )}
                        {selectedProblems.length === 1 && (
                          <div className="text-center text-sm font-medium">2</div>
                        )}
                      </div>
                      <div className="flex flex-col gap-2 border-l border-dashed border-gray-300">
                        {selectedProblems
                          .slice(Math.ceil(selectedProblems.length / 2))
                          .map((problem, index) => (
                            <div key={index} className="text-center text-sm font-medium">
                              {Math.ceil(selectedProblems.length / 2) + index + 1}
                            </div>
                          ))}
                        {selectedProblems.length <= 2 && (
                          <div className="text-center text-sm font-medium">3</div>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
                <div className="text-xs text-gray-500 text-center">
                  {selectedProblems.length > 0
                    ? `${selectedProblems.length}개 문제 추가됨`
                    : "문제를 추가해주세요"}
                </div>

                {/* 추가된 문제 목록 */}
                {selectedProblems.length > 0 && (
                  <div className="mt-4">
                    <h4 className="text-sm font-medium mb-2">추가된 문제</h4>
                    <div className="space-y-1">
                      {selectedProblems.map((problem, index) => (
                        <div
                          key={index}
                          className="flex items-center justify-between p-2 bg-white rounded border text-xs"
                        >
                          <span>
                            {problem.id}. {problem.title}
                          </span>
                          <Button
                            variant="ghost"
                            size="sm"
                            className="h-6 w-6 p-0"
                            onClick={() => {
                              onProblemsChange(selectedProblems.filter((_, i) => i !== index))
                            }}
                          >
                            <X className="h-3 w-3" />
                          </Button>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}
        </div>
      </DialogContent>
    </Dialog>
  )
}